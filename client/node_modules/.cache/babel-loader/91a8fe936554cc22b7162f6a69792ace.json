{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kelvin\\\\Desktop\\\\tinyurl-clone\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./components/Header\";\nimport Shorten from \"./components/Shorten\";\nimport RedirectPage from \"./components/RedirectPage\";\nimport { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [urls, setUrls] = useState({\n    longUrl: \"\",\n    shortUrl: \"\"\n  }); // console.log(\"urls\", urls);\n  // const [longUrl, setLong] = useState(\"\");\n  // const [shortUrl, setShort] = useState(\"\");\n\n  const addUrl = async (longUrl, alias) => {\n    const res = await fetch(`/api/urls/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        longUrl: longUrl,\n        alias: alias\n      })\n    });\n    const data = await res.json();\n    console.log(\"HERE3\", data);\n    setUrls({\n      longUrl: data.longUrl,\n      shortUrl: `http://localhost:3000/${data.alias}`\n    });\n    console.log(\"HERE4\", urls.longUrl);\n    console.log(\"HERE5\", urls.shortUrl);\n  };\n\n  const fetchUrl = async alias => {\n    const res = await fetch(`/api/urls/${alias}`);\n    const data = await res.json();\n    return data.longUrl;\n  };\n\n  const reset = () => {\n    setUrls({\n      longUrl: \"\",\n      shortUrl: \"\"\n    });\n  };\n\n  console.log(\"LongUrl Now: \", urls.longUrl);\n  console.log(\"ShortUrl Now: \", urls.shortUrl);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        render: () => {\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/app\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 20\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/app\",\n        render: props => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Shorten, {\n            longUrl: urls.longUrl,\n            shortUrl: urls.shortUrl,\n            onAdd: addUrl,\n            reset: reset\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/:alias\",\n        render: props => /*#__PURE__*/_jsxDEV(RedirectPage, {\n          fetchUrl: fetchUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"B5mRZyNKalp/vottUdkxf6sDoxY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Kelvin/Desktop/tinyurl-clone/client/src/App.js"],"names":["Header","Shorten","RedirectPage","useEffect","useState","BrowserRouter","Router","Route","Switch","Redirect","App","urls","setUrls","longUrl","shortUrl","addUrl","alias","res","fetch","method","headers","body","JSON","stringify","data","json","console","log","fetchUrl","reset","props"],"mappings":"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","sourcesContent":["import Header from \"./components/Header\";\nimport Shorten from \"./components/Shorten\";\nimport RedirectPage from \"./components/RedirectPage\";\nimport { useEffect, useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nfunction App() {\n  const [urls, setUrls] = useState({ longUrl: \"\", shortUrl: \"\" });\n  // console.log(\"urls\", urls);\n  // const [longUrl, setLong] = useState(\"\");\n  // const [shortUrl, setShort] = useState(\"\");\n\n  const addUrl = async (longUrl, alias) => {\n    const res = await fetch(`/api/urls/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ longUrl: longUrl, alias: alias }),\n    });\n\n    const data = await res.json();\n    console.log(\"HERE3\", data);\n    setUrls({\n      longUrl: data.longUrl,\n      shortUrl: `http://localhost:3000/${data.alias}`,\n    });\n    console.log(\"HERE4\", urls.longUrl);\n    console.log(\"HERE5\", urls.shortUrl);\n  };\n\n  const fetchUrl = async (alias) => {\n    const res = await fetch(`/api/urls/${alias}`);\n\n    const data = await res.json();\n\n    return data.longUrl;\n  };\n\n  const reset = () => {\n    setUrls({ longUrl: \"\", shortUrl: \"\" });\n  };\n  console.log(\"LongUrl Now: \", urls.longUrl);\n  console.log(\"ShortUrl Now: \", urls.shortUrl);\n  return (\n    <Router>\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={() => {\n            return <Redirect to=\"/app\" />;\n          }}\n        />\n        <Route\n          exact\n          path=\"/app\"\n          render={(props) => (\n            <div className=\"App\">\n              <Header />\n              <Shorten\n                longUrl={urls.longUrl}\n                shortUrl={urls.shortUrl}\n                onAdd={addUrl}\n                reset={reset}\n              />\n            </div>\n          )}\n        />\n        <Route\n          exact\n          path=\"/:alias\"\n          render={(props) => <RedirectPage fetchUrl={fetchUrl} />}\n        />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}