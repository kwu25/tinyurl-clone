{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kelvin\\\\Desktop\\\\tinyurl-clone\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./components/Header\";\nimport Shorten from \"./components/Shorten\";\nimport RedirectPage from \"./components/RedirectPage\";\nimport { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [urls, setUrls] = useState({\n    longUrl: \"\",\n    shortUrl: \"\"\n  });\n  const [invalid, setInvalid] = useState(false); // console.log(\"urls\", urls);\n  // const [longUrl, setLong] = useState(\"\");\n  // const [shortUrl, setShort] = useState(\"\");\n\n  const addUrl = async (longUrl, alias) => {\n    try {\n      const res = await fetch(`/api/urls/`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          longUrl: longUrl,\n          alias: alias\n        })\n      });\n      const data = await res.json();\n      console.log(\"HERE3\", data);\n\n      if (data.alias) {\n        setUrls({\n          longUrl: data.longUrl,\n          shortUrl: `http://localhost:3000/${data.alias}`\n        });\n        setInvalid(false);\n      }\n\n      console.log(\"HERE4\", urls.longUrl);\n      console.log(\"HERE5\", urls.shortUrl);\n    } catch {\n      setInvalid(true);\n    }\n  };\n\n  const fetchUrl = async alias => {\n    const res = await fetch(`/api/urls/${alias}`);\n    const data = await res.json();\n    return data.longUrl;\n  };\n\n  const reset = () => {\n    setUrls({\n      longUrl: \"\",\n      shortUrl: \"\"\n    });\n    setInvalid(false);\n  }; // console.log(\"LongUrl Now: \", urls.longUrl);\n  // console.log(\"ShortUrl Now: \", urls.shortUrl);\n\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        render: () => {\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/app\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 20\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/app\",\n        render: props =>\n        /*#__PURE__*/\n        // <div className=\"App\">\n        //   <Header />\n        //   <Shorten\n        //     longUrl={urls.longUrl}\n        //     shortUrl={urls.shortUrl}\n        //     onAdd={addUrl}\n        //     reset={reset}\n        //     isInvalid={invalid}\n        //   />\n        // </div>\n        _jsxDEV(Container, {\n          className: \"App\",\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              lg: 3,\n              sm: 12,\n              children: /*#__PURE__*/_jsxDEV(Shorten, {\n                longUrl: urls.longUrl,\n                shortUrl: urls.shortUrl,\n                onAdd: addUrl,\n                reset: reset,\n                isInvalid: invalid\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              lg: 9,\n              children: \"hello\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/:alias\",\n        render: props => /*#__PURE__*/_jsxDEV(RedirectPage, {\n          fetchUrl: fetchUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OHSjyC26jFZZuhgUBSXtGZtA0/g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Kelvin/Desktop/tinyurl-clone/client/src/App.js"],"names":["Header","Shorten","RedirectPage","useEffect","useState","BrowserRouter","Router","Route","Switch","Redirect","Container","Row","Col","App","urls","setUrls","longUrl","shortUrl","invalid","setInvalid","addUrl","alias","res","fetch","method","headers","body","JSON","stringify","data","json","console","log","fetchUrl","reset","props"],"mappings":"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","sourcesContent":["import Header from \"./components/Header\";\nimport Shorten from \"./components/Shorten\";\nimport RedirectPage from \"./components/RedirectPage\";\nimport { useEffect, useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nfunction App() {\n  const [urls, setUrls] = useState({ longUrl: \"\", shortUrl: \"\" });\n  const [invalid, setInvalid] = useState(false);\n  // console.log(\"urls\", urls);\n  // const [longUrl, setLong] = useState(\"\");\n  // const [shortUrl, setShort] = useState(\"\");\n\n  const addUrl = async (longUrl, alias) => {\n    try {\n      const res = await fetch(`/api/urls/`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ longUrl: longUrl, alias: alias }),\n      });\n      const data = await res.json();\n      console.log(\"HERE3\", data);\n      if (data.alias) {\n        setUrls({\n          longUrl: data.longUrl,\n          shortUrl: `http://localhost:3000/${data.alias}`,\n        });\n        setInvalid(false);\n      }\n      console.log(\"HERE4\", urls.longUrl);\n      console.log(\"HERE5\", urls.shortUrl);\n    } catch {\n      setInvalid(true);\n    }\n  };\n\n  const fetchUrl = async (alias) => {\n    const res = await fetch(`/api/urls/${alias}`);\n\n    const data = await res.json();\n\n    return data.longUrl;\n  };\n\n  const reset = () => {\n    setUrls({ longUrl: \"\", shortUrl: \"\" });\n    setInvalid(false);\n  };\n  // console.log(\"LongUrl Now: \", urls.longUrl);\n  // console.log(\"ShortUrl Now: \", urls.shortUrl);\n  return (\n    <Router>\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={() => {\n            return <Redirect to=\"/app\" />;\n          }}\n        />\n        <Route\n          exact\n          path=\"/app\"\n          render={(props) => (\n            // <div className=\"App\">\n            //   <Header />\n            //   <Shorten\n            //     longUrl={urls.longUrl}\n            //     shortUrl={urls.shortUrl}\n            //     onAdd={addUrl}\n            //     reset={reset}\n            //     isInvalid={invalid}\n            //   />\n            // </div>\n            <Container className=\"App\">\n              <Row>\n                <Col>\n                  <Header />\n                </Col>\n              </Row>\n              <Row>\n                <Col lg={3} sm={12}>\n                  <Shorten\n                    longUrl={urls.longUrl}\n                    shortUrl={urls.shortUrl}\n                    onAdd={addUrl}\n                    reset={reset}\n                    isInvalid={invalid}\n                  />\n                </Col>\n                <Col lg={9}>hello</Col>\n              </Row>\n            </Container>\n          )}\n        />\n        <Route\n          exact\n          path=\"/:alias\"\n          render={(props) => <RedirectPage fetchUrl={fetchUrl} />}\n        />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}